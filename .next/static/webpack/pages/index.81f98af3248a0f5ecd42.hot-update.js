/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/components/particles.js":
/*!***************************************!*\
  !*** ./pages/components/particles.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Particles\": function() { return /* binding */ Particles; }\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar Particles = function Particles() {\n  /************* SHIM ************************/\n  window.requestAnimFrame = function () {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      window.setTimeout(callback, 1000 / 60);\n    };\n  }();\n\n  function Scene() {\n    this.animation = undefined;\n    this.canvas = undefined;\n    this.height = 0;\n    this.width = 0;\n    this.context = undefined;\n    this.paused = false;\n    this.stats = undefined;\n    this.istats = undefined;\n  }\n\n  Scene.prototype = {\n    constructor: Scene,\n    setup: function setup(canvas, animation, width, height, stats) {\n      this.canvas = canvas;\n      this.animation = animation;\n      this.height = this.canvas.height = height;\n      this.width = this.canvas.width = width;\n      this.context = this.canvas.getContext('2d');\n      this.stats = stats && window.Stats;\n\n      if (this.stats) {\n        this.istats = new Stats();\n        this.istats.setMode(0);\n        this.istats.domElement.style.position = 'absolute';\n        this.istats.domElement.style.left = '0px';\n        this.istats.domElement.style.top = '0px';\n        this.istats.domElement.style.zIndex = '99999';\n        document.body.appendChild(this.istats.domElement);\n      }\n    },\n    animate: function animate() {\n      if (!this.paused) {\n        requestAnimFrame(this.animate.bind(this));\n      }\n\n      this.stats && this.istats.begin();\n      this.animation(this);\n      this.stats && this.istats.end();\n    }\n  };\n  var scene = new Scene(),\n      particles = [],\n      len = 40000,\n      height = document.body.offsetHeight,\n      width = document.body.offsetWidth;\n\n  function Particle() {\n    this.x = 0;\n    this.y = 0;\n    this.size = 0;\n    this.depth = 0;\n    this.vy = 0;\n  }\n\n  Particle.prototype = {\n    constructor: Particle,\n    update: function update(width, height) {\n      if (this.y > height) {\n        this.y = 1 - this.size;\n      }\n\n      this.y += this.vy;\n    }\n  };\n\n  for (var i = 0; i < len; i++) {\n    var particle = new Particle();\n    particle.x = Math.random() * width;\n    particle.y = Math.random() * height;\n    particle.depth = Math.random() * 10 | 0;\n    particle.size = (particle.depth + 1) / 8;\n    particle.vy = particle.depth * .25 + 1 / Math.random();\n    particles.push(particle);\n  }\n\n  function falling_particles() {\n    var idata = this.context.createImageData(this.width, this.height);\n\n    for (var i = 0, l = particles.length; i < l; i++) {\n      // thanks Loktar ;)\n      var particle = particles[i];\n\n      for (var w = 0; w < particle.size; w++) {\n        for (var h = 0; h < particle.size; h++) {\n          var pData = (~~(particle.x + w) + ~~(particle.y + h) * this.width) * 4;\n          idata.data[pData] = 255;\n          idata.data[pData + 1] = 255;\n          idata.data[pData + 2] = 255;\n          idata.data[pData + 3] = 255;\n        }\n      }\n\n      particle.update(this.width, this.height);\n    }\n\n    this.context.putImageData(idata, 0, 0);\n  }\n\n  scene.setup(document.getElementById('canvas'), falling_particles, width, height, !0);\n  scene.animate();\n\n  window.onresize = function () {\n    height = scene.height = scene.canvas.height = document.body.offsetHeight;\n    width = scene.width = scene.canvas.width = document.body.offsetWidth;\n  };\n};\n_c = Particles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Particles\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/components/particles.js\n");

/***/ })

});